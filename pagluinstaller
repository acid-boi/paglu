#!/bin/bash

# Colored output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Default installation paths
DEFAULT_INSTALL_DIR="/opt/paglu"
DEFAULT_BIN_PATH="/usr/local/bin"
SCRIPT_NAME="paglu"
CONFIG_DIR="$DEFAULT_INSTALL_DIR/.config" # Centralized config storage

# Dependency check function
check_dependencies() {
    local dependencies=("jq" "curl" "brave-browser")
    local missing_deps=()

    for dep in "${dependencies[@]}"; do
        if ! command -v "$dep" &>/dev/null; then
            missing_deps+=("$dep")
        fi
    done

    if [ ${#missing_deps[@]} -ne 0 ]; then
        echo -e "${RED}Error: Missing dependencies:${NC}"
        for dep in "${missing_deps[@]}"; do
            echo -e "  - ${YELLOW}$dep${NC}"
        done
        echo -e "${RED}Please install these dependencies before proceeding.${NC}"
        exit 1
    fi
}

# Function to get custom installation directory
get_install_dir() {
    read -p "Enter custom installation directory (default: $DEFAULT_INSTALL_DIR): " user_dir
    INSTALL_DIR=${user_dir:-$DEFAULT_INSTALL_DIR}

    # Ensure absolute path
    INSTALL_DIR=$(readlink -f "$INSTALL_DIR")
}

# Main installation function
install_paglu() {
    # Check for sudo/root
    if [[ $EUID -ne 0 ]]; then
        echo -e "${RED}This script must be run with sudo${NC}"
        exit 1
    fi

    # Check dependencies
    check_dependencies

    # Get installation directory
    get_install_dir

    # Create installation directory
    mkdir -p "$INSTALL_DIR"

    # Set permissions
    chmod 777 "$INSTALL_DIR"
    chown root:users "$INSTALL_DIR"
    setfacl -d -m g::rwx "$INSTALL_DIR"
    setfacl -m g::rwx "$INSTALL_DIR"

    # Create centralized configuration directory
    mkdir -p "$CONFIG_DIR"
    chmod 777 "$CONFIG_DIR"

    # Copy script
    cp "$SCRIPT_NAME" "$INSTALL_DIR/$SCRIPT_NAME"
    chmod 777 "$INSTALL_DIR/$SCRIPT_NAME"

    # Modify script paths
    sed -i "s|TEMPLATE_FILE=\"\$HOME/.paglu_templates.json\"|TEMPLATE_FILE=\"$CONFIG_DIR/templates.json\"|g" "$INSTALL_DIR/$SCRIPT_NAME"
    sed -i "s|BRAVE_PROFILE=\"\$HOME/.paglu_profile\"|BRAVE_PROFILE=\"$CONFIG_DIR/brave_profile\"|g" "$INSTALL_DIR/$SCRIPT_NAME"

    # Create symlink
    ln -sf "$INSTALL_DIR/$SCRIPT_NAME" "$DEFAULT_BIN_PATH/$SCRIPT_NAME"

    # Create systemwide config file to store installation path
    CONFIG_FILE="/etc/paglu/install.conf"
    mkdir -p "$(dirname "$CONFIG_FILE")"
    echo "INSTALL_DIR=$INSTALL_DIR" >"$CONFIG_FILE"
    echo "CONFIG_DIR=$CONFIG_DIR" >>"$CONFIG_FILE"

    # Optional: Create desktop entry for GUI integration
    DESKTOP_ENTRY="/usr/share/applications/paglu.desktop"
    cat <<EOF >"$DESKTOP_ENTRY"
[Desktop Entry]
Name=paglu Tab Manager
Comment=Manage Brave Browser Tab Sessions
Exec=$DEFAULT_BIN_PATH/$SCRIPT_NAME
Type=Application
Categories=Utility;
Icon=browser
EOF

    # Create uninstaller
    UNINSTALLER="$INSTALL_DIR/uninstall.sh"
    cat <<'EOFUNINSTALL' >"$UNINSTALLER"
#!/bin/bash
INSTALL_DIR="$1"
BIN_PATH="/usr/local/bin"
SCRIPT_NAME="paglu"

# Remove symlink
rm -f "$BIN_PATH/$SCRIPT_NAME"

# Remove script and directory
rm -rf "$INSTALL_DIR"

# Remove desktop entry
rm -f "/usr/share/applications/paglu.desktop"

# Remove config files
rm -f "/etc/paglu/install.conf"

echo "paglu Tab Manager has been uninstalled."
EOFUNINSTALL

    chmod +x "$UNINSTALLER"

    echo -e "${GREEN}✔ Installation Complete!${NC}"
    echo -e "Installed at: ${YELLOW}$INSTALL_DIR${NC}"
    echo -e "Configuration stored at: ${YELLOW}$CONFIG_DIR${NC}"
    echo -e "Run with: ${YELLOW}$SCRIPT_NAME${NC}"
}

# Uninstallation function
uninstall_paglu() {
    if [[ $EUID -ne 0 ]]; then
        echo -e "${RED}This script must be run with sudo${NC}"
        exit 1
    fi

    # Read installation directory from config
    if [ -f "/etc/paglu/install.conf" ]; then
        source "/etc/paglu/install.conf"

        read -p "Are you sure you want to uninstall paglu Tab Manager? (y/N): " confirm
        if [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]]; then
            "$INSTALL_DIR/uninstall.sh" "$INSTALL_DIR"
            echo -e "${GREEN}✔ Uninstallation Complete!${NC}"
        else
            echo "Uninstallation cancelled."
        fi
    else
        echo -e "${RED}No installation found.${NC}"
    fi
}

# Script entry point
case "$1" in
install)
    install_paglu
    ;;
uninstall)
    uninstall_paglu
    ;;
*)
    echo "Usage: $0 {install|uninstall}"
    exit 1
    ;;
esac

exit 0
